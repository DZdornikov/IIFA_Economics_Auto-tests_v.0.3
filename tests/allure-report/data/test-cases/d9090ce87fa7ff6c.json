{"uid":"d9090ce87fa7ff6c","name":"Расчет случайного кейса","fullName":"tests.test_calculation_constructor.TestCalculationConstructor#test_calculation","historyId":"84a8ff3e4ba7bc57ea13d5b0419ccf6f","time":{"start":1676607079013,"stop":1676607091572,"duration":12559},"description":"Тест запустил - Данил Подольный \nСтенд, на котором запускался тест - http://genrestest.nntc.pro/economics/","descriptionHtml":"<p>Тест запустил - Данил Подольный<br />\nСтенд, на котором запускался тест - http://genrestest.nntc.pro/economics/</p>\n","status":"broken","statusMessage":"ValueError: empty range for randrange() (2, 2, 0)","statusTrace":"self = <test_calculation_constructor.TestCalculationConstructor object at 0x000001C47D77D810>\nsign_in_to_stand = <pages.sign_in_page.SignInPage object at 0x000001C47C7010D0>\n\n    @allure.title(\"Расчет случайного кейса\")\n    @allure.feature(\"Ядро расчетов, выгрузка отчета\")\n    @allure.story(\"Выбор случайной МК, случайного кейса и расчет с первыми попавшимися макрой и ФЭМ. \"\n                  \"Переход в отчеты и скачивание файла.\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.description(f\"Тест запустил - {tester_name} \\nСтенд, на котором запускался тест - {current_stand}\")\n    @pytest.mark.calculacion_constructor\n    def test_calculation(self, sign_in_to_stand):\n        with allure.step(\"Прохождение авторизации на стенде\"):\n            page = sign_in_to_stand\n        with allure.step(\"Переход в конструктор расчетов\"):\n            CCPage.move_to_calculation_constructor_page(page)\n            sleep(1)\n            CCPage.is_page_calculation_page(page)\n        with allure.step(\"Расчет с случайным кейсом, первыми попавшимися макрой и ФЭМ\"):\n>           CCPage.calculate_random_case(page)\n\ntest_calculation_constructor.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\calculation_constructor_page.py:156: in calculate_random_case\n    str(randint(2, cons_num)) + ')')\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\random.py:362: in randint\n    return self.randrange(a, b+1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <random.Random object at 0x000001C479F600A0>, start = 2, stop = 2\nstep = 1\n\n    def randrange(self, start, stop=None, step=_ONE):\n        \"\"\"Choose a random item from range(stop) or range(start, stop[, step]).\n    \n        Roughly equivalent to ``choice(range(start, stop, step))`` but\n        supports arbitrarily large ranges and is optimized for common cases.\n    \n        \"\"\"\n    \n        # This code is a bit messy to make it fast for the\n        # common case while still doing adequate error checking.\n        try:\n            istart = _index(start)\n        except TypeError:\n            istart = int(start)\n            if istart != start:\n                _warn('randrange() will raise TypeError in the future',\n                      DeprecationWarning, 2)\n                raise ValueError(\"non-integer arg 1 for randrange()\")\n            _warn('non-integer arguments to randrange() have been deprecated '\n                  'since Python 3.10 and will be removed in a subsequent '\n                  'version',\n                  DeprecationWarning, 2)\n        if stop is None:\n            # We don't check for \"step != 1\" because it hasn't been\n            # type checked and converted to an integer yet.\n            if step is not _ONE:\n                raise TypeError('Missing a non-None stop argument')\n            if istart > 0:\n                return self._randbelow(istart)\n            raise ValueError(\"empty range for randrange()\")\n    \n        # stop argument supplied.\n        try:\n            istop = _index(stop)\n        except TypeError:\n            istop = int(stop)\n            if istop != stop:\n                _warn('randrange() will raise TypeError in the future',\n                      DeprecationWarning, 2)\n                raise ValueError(\"non-integer stop for randrange()\")\n            _warn('non-integer arguments to randrange() have been deprecated '\n                  'since Python 3.10 and will be removed in a subsequent '\n                  'version',\n                  DeprecationWarning, 2)\n        width = istop - istart\n        try:\n            istep = _index(step)\n        except TypeError:\n            istep = int(step)\n            if istep != step:\n                _warn('randrange() will raise TypeError in the future',\n                      DeprecationWarning, 2)\n                raise ValueError(\"non-integer step for randrange()\")\n            _warn('non-integer arguments to randrange() have been deprecated '\n                  'since Python 3.10 and will be removed in a subsequent '\n                  'version',\n                  DeprecationWarning, 2)\n        # Fast path.\n        if istep == 1:\n            if width > 0:\n                return istart + self._randbelow(width)\n>           raise ValueError(\"empty range for randrange() (%d, %d, %d)\" % (istart, istop, width))\nE           ValueError: empty range for randrange() (2, 2, 0)\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\random.py:345: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"test_append_report_history","time":{"start":1676607072038,"stop":1676607072038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"driver","time":{"start":1676607072039,"stop":1676607075497,"duration":3458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"sign_in_to_stand","time":{"start":1676607075497,"stop":1676607079013,"duration":3516},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"description":"Тест запустил - Данил Подольный \nСтенд, на котором запускался тест - http://genrestest.nntc.pro/economics/","status":"broken","statusMessage":"ValueError: empty range for randrange() (2, 2, 0)","statusTrace":"self = <test_calculation_constructor.TestCalculationConstructor object at 0x000001C47D77D810>\nsign_in_to_stand = <pages.sign_in_page.SignInPage object at 0x000001C47C7010D0>\n\n    @allure.title(\"Расчет случайного кейса\")\n    @allure.feature(\"Ядро расчетов, выгрузка отчета\")\n    @allure.story(\"Выбор случайной МК, случайного кейса и расчет с первыми попавшимися макрой и ФЭМ. \"\n                  \"Переход в отчеты и скачивание файла.\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.description(f\"Тест запустил - {tester_name} \\nСтенд, на котором запускался тест - {current_stand}\")\n    @pytest.mark.calculacion_constructor\n    def test_calculation(self, sign_in_to_stand):\n        with allure.step(\"Прохождение авторизации на стенде\"):\n            page = sign_in_to_stand\n        with allure.step(\"Переход в конструктор расчетов\"):\n            CCPage.move_to_calculation_constructor_page(page)\n            sleep(1)\n            CCPage.is_page_calculation_page(page)\n        with allure.step(\"Расчет с случайным кейсом, первыми попавшимися макрой и ФЭМ\"):\n>           CCPage.calculate_random_case(page)\n\ntest_calculation_constructor.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\calculation_constructor_page.py:156: in calculate_random_case\n    str(randint(2, cons_num)) + ')')\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\random.py:362: in randint\n    return self.randrange(a, b+1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <random.Random object at 0x000001C479F600A0>, start = 2, stop = 2\nstep = 1\n\n    def randrange(self, start, stop=None, step=_ONE):\n        \"\"\"Choose a random item from range(stop) or range(start, stop[, step]).\n    \n        Roughly equivalent to ``choice(range(start, stop, step))`` but\n        supports arbitrarily large ranges and is optimized for common cases.\n    \n        \"\"\"\n    \n        # This code is a bit messy to make it fast for the\n        # common case while still doing adequate error checking.\n        try:\n            istart = _index(start)\n        except TypeError:\n            istart = int(start)\n            if istart != start:\n                _warn('randrange() will raise TypeError in the future',\n                      DeprecationWarning, 2)\n                raise ValueError(\"non-integer arg 1 for randrange()\")\n            _warn('non-integer arguments to randrange() have been deprecated '\n                  'since Python 3.10 and will be removed in a subsequent '\n                  'version',\n                  DeprecationWarning, 2)\n        if stop is None:\n            # We don't check for \"step != 1\" because it hasn't been\n            # type checked and converted to an integer yet.\n            if step is not _ONE:\n                raise TypeError('Missing a non-None stop argument')\n            if istart > 0:\n                return self._randbelow(istart)\n            raise ValueError(\"empty range for randrange()\")\n    \n        # stop argument supplied.\n        try:\n            istop = _index(stop)\n        except TypeError:\n            istop = int(stop)\n            if istop != stop:\n                _warn('randrange() will raise TypeError in the future',\n                      DeprecationWarning, 2)\n                raise ValueError(\"non-integer stop for randrange()\")\n            _warn('non-integer arguments to randrange() have been deprecated '\n                  'since Python 3.10 and will be removed in a subsequent '\n                  'version',\n                  DeprecationWarning, 2)\n        width = istop - istart\n        try:\n            istep = _index(step)\n        except TypeError:\n            istep = int(step)\n            if istep != step:\n                _warn('randrange() will raise TypeError in the future',\n                      DeprecationWarning, 2)\n                raise ValueError(\"non-integer step for randrange()\")\n            _warn('non-integer arguments to randrange() have been deprecated '\n                  'since Python 3.10 and will be removed in a subsequent '\n                  'version',\n                  DeprecationWarning, 2)\n        # Fast path.\n        if istep == 1:\n            if width > 0:\n                return istart + self._randbelow(width)\n>           raise ValueError(\"empty range for randrange() (%d, %d, %d)\" % (istart, istop, width))\nE           ValueError: empty range for randrange() (2, 2, 0)\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\random.py:345: ValueError","steps":[{"name":"Прохождение авторизации на стенде","time":{"start":1676607079020,"stop":1676607079020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"Переход в конструктор расчетов","time":{"start":1676607079020,"stop":1676607080900,"duration":1880},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"Расчет с случайным кейсом, первыми попавшимися макрой и ФЭМ","time":{"start":1676607080900,"stop":1676607091566,"duration":10666},"status":"broken","statusMessage":"ValueError: empty range for randrange() (2, 2, 0)\n","statusTrace":"  File \"C:\\Users\\dpodolny\\PycharmProjects\\DatcyEstateAT_v.0.1\\IIFA_Economics_Auto-tests_v.0.3\\tests\\test_calculation_constructor.py\", line 64, in test_calculation\n    CCPage.calculate_random_case(page)\n  File \"C:\\Users\\dpodolny\\PycharmProjects\\DatcyEstateAT_v.0.1\\IIFA_Economics_Auto-tests_v.0.3\\pages\\calculation_constructor_page.py\", line 156, in calculate_random_case\n    str(randint(2, cons_num)) + ')')\n        ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\dpodolny\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\random.py\", line 362, in randint\n    return self.randrange(a, b+1)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\dpodolny\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\random.py\", line 345, in randrange\n    raise ValueError(\"empty range for randrange() (%d, %d, %d)\" % (istart, istop, width))\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"d584502bd60d4035","name":"stdout","source":"d584502bd60d4035.txt","type":"text/plain","size":54}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":3,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1676607092059,"stop":1676607111391,"duration":19332},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"blocker"},{"name":"feature","value":"Ядро расчетов, выгрузка отчета"},{"name":"story","value":"Выбор случайной МК, случайного кейса и расчет с первыми попавшимися макрой и ФЭМ. Переход в отчеты и скачивание файла."},{"name":"tag","value":"calculacion_constructor"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_calculation_constructor"},{"name":"subSuite","value":"TestCalculationConstructor"},{"name":"host","value":"C100119"},{"name":"thread","value":"10456-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_calculation_constructor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["calculacion_constructor"]},"source":"d9090ce87fa7ff6c.json","parameterValues":[]}