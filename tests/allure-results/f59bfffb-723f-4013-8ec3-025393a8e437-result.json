{"name": "Расчет случайного кейса", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <svg class=\"MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-ewdhct\" focusable=\"false\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" data-testid=\"ExpandMoreIcon\">...</svg> is not clickable at point (108, 420). Other element would receive the click: <div class=\"MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiInputBase-sizeSmall MuiInputBase-adornedStart css-9l1c1q\">...</div>\n  (Session info: chrome=109.0.5414.120)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00586643]\n\t(No symbol) [0x0051BE21]\n\t(No symbol) [0x0041DA9D]\n\t(No symbol) [0x004592B2]\n\t(No symbol) [0x00456970]\n\t(No symbol) [0x00453E0B]\n\t(No symbol) [0x00452548]\n\t(No symbol) [0x00446B13]\n\t(No symbol) [0x0046FD7C]\n\t(No symbol) [0x0044641F]\n\t(No symbol) [0x004700D4]\n\t(No symbol) [0x00486B09]\n\t(No symbol) [0x0046FB76]\n\t(No symbol) [0x004449C1]\n\t(No symbol) [0x00445E5D]\n\tGetHandleVerifier [0x007FA142+2497106]\n\tGetHandleVerifier [0x008285D3+2686691]\n\tGetHandleVerifier [0x0082BB9C+2700460]\n\tGetHandleVerifier [0x00633B10+635936]\n\t(No symbol) [0x00524A1F]\n\t(No symbol) [0x0052A418]\n\t(No symbol) [0x0052A505]\n\t(No symbol) [0x0053508B]\n\tBaseThreadInitThunk [0x76F900F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C07BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77C07B8E+238]", "trace": "self = <test_calculation_constructor.TestCalculationConstructor object at 0x0000021911C40F10>\nsign_in_to_stand = <pages.sign_in_page.SignInPage object at 0x0000021911C72990>\n\n    @allure.title(\"Расчет случайного кейса\")\n    @allure.feature(\"Ядро расчетов, выгрузка отчета\")\n    @allure.story(\"Выбор случайной МК, случайного кейса и расчет с первыми попавшимися макрой и ФЭМ. \"\n                  \"Переход в отчеты и скачивание файла.\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.description(f\"Тест запустил - {tester_name} \\nСтенд, на котором запускался тест - {current_stand}\")\n    @pytest.mark.calculacion_constructor\n    def test_calculation(self, sign_in_to_stand):\n        with allure.step(\"Прохождение авторизации на стенде\"):\n            page = sign_in_to_stand\n        with allure.step(\"Переход в конструктор расчетов\"):\n            CCPage.move_to_calculation_constructor_page(page)\n            sleep(1)\n            CCPage.is_page_calculation_page(page)\n        with allure.step(\"Расчет с случайным кейсом, первыми попавшимися макрой и ФЭМ\"):\n>           CCPage.calculate_random_case(page)\n\ntest_calculation_constructor.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\calculation_constructor_page.py:150: in calculate_random_case\n    CalculationConstructorPage.upload_mb(self, mb_list[randint(0, len(mb_list)+1)])\n..\\pages\\calculation_constructor_page.py:139: in upload_mb\n    CalculationConstructorPage.mb_checker(self, cons_list[j], cases_list[j])\n..\\pages\\calculation_constructor_page.py:82: in mb_checker\n    self.click_on_visible_element(mb_opener_locator)\n..\\pages\\base_page.py:59: in click_on_visible_element\n    return element.click()\n..\\..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000219116060D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C07BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C07B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <svg class=\"MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-ewdhct\" focusable=\"false\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" data-testid=\"ExpandMoreIcon\">...</svg> is not clickable at point (108, 420). Other element would receive the click: <div class=\"MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiInputBase-sizeSmall MuiInputBase-adornedStart css-9l1c1q\">...</div>\nE         (Session info: chrome=109.0.5414.120)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00586643]\nE       \t(No symbol) [0x0051BE21]\nE       \t(No symbol) [0x0041DA9D]\nE       \t(No symbol) [0x004592B2]\nE       \t(No symbol) [0x00456970]\nE       \t(No symbol) [0x00453E0B]\nE       \t(No symbol) [0x00452548]\nE       \t(No symbol) [0x00446B13]\nE       \t(No symbol) [0x0046FD7C]\nE       \t(No symbol) [0x0044641F]\nE       \t(No symbol) [0x004700D4]\nE       \t(No symbol) [0x00486B09]\nE       \t(No symbol) [0x0046FB76]\nE       \t(No symbol) [0x004449C1]\nE       \t(No symbol) [0x00445E5D]\nE       \tGetHandleVerifier [0x007FA142+2497106]\nE       \tGetHandleVerifier [0x008285D3+2686691]\nE       \tGetHandleVerifier [0x0082BB9C+2700460]\nE       \tGetHandleVerifier [0x00633B10+635936]\nE       \t(No symbol) [0x00524A1F]\nE       \t(No symbol) [0x0052A418]\nE       \t(No symbol) [0x0052A505]\nE       \t(No symbol) [0x0053508B]\nE       \tBaseThreadInitThunk [0x76F900F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C07BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C07B8E+238]\n\n..\\..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementClickInterceptedException"}, "description": "Тест запустил - Данил Подольный \nСтенд, на котором запускался тест - http://genrestest.nntc.pro/economics/", "steps": [{"name": "Прохождение авторизации на стенде", "status": "passed", "start": 1676607828632, "stop": 1676607828632}, {"name": "Переход в конструктор расчетов", "status": "passed", "start": 1676607828632, "stop": 1676607829999}, {"name": "Расчет с случайным кейсом, первыми попавшимися макрой и ФЭМ", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <svg class=\"MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-ewdhct\" focusable=\"false\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" data-testid=\"ExpandMoreIcon\">...</svg> is not clickable at point (108, 420). Other element would receive the click: <div class=\"MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiInputBase-sizeSmall MuiInputBase-adornedStart css-9l1c1q\">...</div>\n  (Session info: chrome=109.0.5414.120)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00586643]\n\t(No symbol) [0x0051BE21]\n\t(No symbol) [0x0041DA9D]\n\t(No symbol) [0x004592B2]\n\t(No symbol) [0x00456970]\n\t(No symbol) [0x00453E0B]\n\t(No symbol) [0x00452548]\n\t(No symbol) [0x00446B13]\n\t(No symbol) [0x0046FD7C]\n\t(No symbol) [0x0044641F]\n\t(No symbol) [0x004700D4]\n\t(No symbol) [0x00486B09]\n\t(No symbol) [0x0046FB76]\n\t(No symbol) [0x004449C1]\n\t(No symbol) [0x00445E5D]\n\tGetHandleVerifier [0x007FA142+2497106]\n\tGetHandleVerifier [0x008285D3+2686691]\n\tGetHandleVerifier [0x0082BB9C+2700460]\n\tGetHandleVerifier [0x00633B10+635936]\n\t(No symbol) [0x00524A1F]\n\t(No symbol) [0x0052A418]\n\t(No symbol) [0x0052A505]\n\t(No symbol) [0x0053508B]\n\tBaseThreadInitThunk [0x76F900F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C07BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77C07B8E+238]\n\n", "trace": "  File \"C:\\Users\\dpodolny\\PycharmProjects\\DatcyEstateAT_v.0.1\\IIFA_Economics_Auto-tests_v.0.3\\tests\\test_calculation_constructor.py\", line 64, in test_calculation\n    CCPage.calculate_random_case(page)\n  File \"C:\\Users\\dpodolny\\PycharmProjects\\DatcyEstateAT_v.0.1\\IIFA_Economics_Auto-tests_v.0.3\\pages\\calculation_constructor_page.py\", line 150, in calculate_random_case\n    CalculationConstructorPage.upload_mb(self, mb_list[randint(0, len(mb_list)+1)])\n  File \"C:\\Users\\dpodolny\\PycharmProjects\\DatcyEstateAT_v.0.1\\IIFA_Economics_Auto-tests_v.0.3\\pages\\calculation_constructor_page.py\", line 139, in upload_mb\n    CalculationConstructorPage.mb_checker(self, cons_list[j], cases_list[j])\n  File \"C:\\Users\\dpodolny\\PycharmProjects\\DatcyEstateAT_v.0.1\\IIFA_Economics_Auto-tests_v.0.3\\pages\\calculation_constructor_page.py\", line 82, in mb_checker\n    self.click_on_visible_element(mb_opener_locator)\n  File \"C:\\Users\\dpodolny\\PycharmProjects\\DatcyEstateAT_v.0.1\\IIFA_Economics_Auto-tests_v.0.3\\pages\\base_page.py\", line 59, in click_on_visible_element\n    return element.click()\n           ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\dpodolny\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\dpodolny\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\dpodolny\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\dpodolny\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1676607829999, "stop": 1676607864502}], "attachments": [{"name": "stdout", "source": "c3de52b4-7e5e-4b77-ae77-8f3b916b8e63-attachment.txt", "type": "text/plain"}], "start": 1676607828626, "stop": 1676607864507, "uuid": "efe6a04c-e908-452f-bf91-a21a4e9ecb82", "historyId": "84a8ff3e4ba7bc57ea13d5b0419ccf6f", "testCaseId": "a8bd6ff1bb033a194169651d6e11754b", "fullName": "tests.test_calculation_constructor.TestCalculationConstructor#test_calculation", "labels": [{"name": "story", "value": "Выбор случайной МК, случайного кейса и расчет с первыми попавшимися макрой и ФЭМ. Переход в отчеты и скачивание файла."}, {"name": "feature", "value": "Ядро расчетов, выгрузка отчета"}, {"name": "severity", "value": "blocker"}, {"name": "tag", "value": "calculacion_constructor"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_calculation_constructor"}, {"name": "subSuite", "value": "TestCalculationConstructor"}, {"name": "host", "value": "C100119"}, {"name": "thread", "value": "13620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_calculation_constructor"}]}