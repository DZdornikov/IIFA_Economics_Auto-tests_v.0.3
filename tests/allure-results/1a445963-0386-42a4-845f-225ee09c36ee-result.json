{"name": "Тест загрузки МК", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\Users\\\\dpodolny\\\\PycharmProjects\\\\DatcyEstateAT_v.0.1\\\\IIFA_Economics_Auto-tests_v.0.3\\\\video_reports\\\\test_parser_18_08_36.mp4'", "trace": "args = ()\nkwargs = {'mb_name': 'МК_Upstream_v22.6Б_6+6_ЦНТ', 'sign_in_to_stand': <pages.sign_in_page.SignInPage object at 0x000001C6C8A32B90>}\nmode = 'all'\noutfile = 'C:\\\\Users\\\\dpodolny\\\\PycharmProjects\\\\DatcyEstateAT_v.0.1\\\\IIFA_Economics_Auto-tests_v.0.3\\\\video_reports\\\\test_parser_18_08_36.mp4'\ncmd = 'C:\\\\Users\\\\dpodolny\\\\PycharmProjects\\\\DatcyEstateAT_v.0.1\\\\IIFA_Economics_Auto-tests_v.0.3\\\\tools\\\\ffmpeg-master-late...odolny\\\\PycharmProjects\\\\DatcyEstateAT_v.0.1\\\\IIFA_Economics_Auto-tests_v.0.3\\\\video_reports\\\\test_parser_18_08_36.mp4'\nffmpeg_process = <Popen: returncode: 1 args: 'C:\\\\Users\\\\dpodolny\\\\PycharmProjects\\\\DatcyEsta...>\n\n    def func_wrapper(*args, **kwargs):\n        mode = record_video_mode\n        print(func.__name__)\n        if (not path.exists(ffmpeg_path)) or mode == 'none' or ('_novideo_' in f\"{func.__name__}\"):\n            return\n        try:\n            outfile = f\"{video_reports_dir}\\\\{func.__name__}_{dt.now().strftime('%H_%M_%S')}.mp4\"\n            if path.exists(outfile):\n                remove(outfile)\n            cmd = f'{ffmpeg_path} -f gdigrab -framerate ntsc -video_size 1920x1080 -i desktop {outfile}'\n            ffmpeg_process = subprocess.Popen(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL,\n                                              stdin=subprocess.PIPE)\n            func(*args, **kwargs)  # No return values\n            ffmpeg_process.communicate(input=b'q')\n            ffmpeg_process.wait()\n>           allure.attach.file(outfile, attachment_type=allure.attachment_type.MP4)\n\n..\\conftest.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\allure_commons\\_allure.py:203: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\allure_pytest\\listener.py:233: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\allure_commons\\reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n..\\..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\iifa-economics-auto-tests-v-0-3-eUzg4zEH-py3.11\\Lib\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\shutil.py:436: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = 'C:\\\\Users\\\\dpodolny\\\\PycharmProjects\\\\DatcyEstateAT_v.0.1\\\\IIFA_Economics_Auto-tests_v.0.3\\\\video_reports\\\\test_parser_18_08_36.mp4'\ndst = 'C:\\\\Users\\\\dpodolny\\\\PycharmProjects\\\\DatcyEstateAT_v.0.1\\\\IIFA_Economics_Auto-tests_v.0.3\\\\tests\\\\allure-results\\\\186b18b7-87c1-4d35-90b6-f90c4ece3776-attachment.mp4'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\Users\\\\dpodolny\\\\PycharmProjects\\\\DatcyEstateAT_v.0.1\\\\IIFA_Economics_Auto-tests_v.0.3\\\\video_reports\\\\test_parser_18_08_36.mp4'\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\shutil.py:256: FileNotFoundError"}, "description": "Тест запустил - Данил Подольный \nСтенд, на котором запускался тест - http://genrestest.nntc.pro/economics/", "steps": [{"name": "Прохождение авторизации на стенде", "status": "passed", "start": 1676459316435, "stop": 1676459316435}, {"name": "Переход в конструктор расчетов", "status": "passed", "start": 1676459316435, "stop": 1676459317741}, {"name": "Очистка мастер-книг со стенда", "status": "passed", "steps": [{"name": "Подчет всех МК на стенде", "status": "passed", "start": 1676459317762, "stop": 1676459322883}, {"name": "Удаление всех МК на стенде", "status": "passed", "start": 1676459322883, "stop": 1676459326320}, {"name": "Проверка остались ли МК на странице", "status": "passed", "start": 1676459326320, "stop": 1676459331427}, {"name": "F5 и повторная проверка", "status": "passed", "start": 1676459331427, "stop": 1676459337748}], "start": 1676459317741, "stop": 1676459337748}, {"name": "Загрузка мастер-книги на стенд", "status": "passed", "start": 1676459337748, "stop": 1676459663851}], "attachments": [{"source": "186b18b7-87c1-4d35-90b6-f90c4ece3776-attachment.mp4", "type": "video/mp4"}, {"name": "stdout", "source": "aef5c7a2-8a2d-45b7-9911-dedab0df4ea4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "mb_name", "value": "'МК_Upstream_v22.6Б_6+6_ЦНТ'"}], "start": 1676459316429, "stop": 1676459663852, "uuid": "9cdd3d35-d956-4697-ba01-b464e1216dc1", "historyId": "76c019581a308b900c8b57d0a9ccc719", "testCaseId": "649e79659ec5cf1411c309c586996b64", "fullName": "tests.test_calculation_constructor.TestCalculationConstructor#test_parser", "labels": [{"name": "story", "value": "Загрузка всех имеющихся МК на стенд и проверка, что все загрузилось корректно"}, {"name": "severity", "value": "blocker"}, {"name": "feature", "value": "Загрузка МК на фронт"}, {"name": "tag", "value": "calculacion_constructor"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_calculation_constructor"}, {"name": "subSuite", "value": "TestCalculationConstructor"}, {"name": "host", "value": "C100119"}, {"name": "thread", "value": "30940-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_calculation_constructor"}]}